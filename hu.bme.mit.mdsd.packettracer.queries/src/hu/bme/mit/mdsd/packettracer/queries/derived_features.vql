package hu.bme.mit.mdsd.packettracer.queries

import "http://mit.bme.hu/mdsd/packettracer"

@QueryBasedFeature
pattern subnetworks(diagram: PacketTracerDiagram, subnetwork: Subnetwork) {
	PacketTracerDiagram.networkDevices.controls(diagram, subnetwork);
}

pattern connected(connector: Connector, otherConnector: Connector) {
	Connection.from(connection, connector);
	Connection.to(connection, otherConnector);
} or {
	Connection.from(connection, otherConnector);
	Connection.to(connection, connector);	
}

@QueryBasedFeature
pattern subnetwork(interface: NetworkInterface, subnetwork: Subnetwork) {
	Endpoint.networkInterfaces(_, interface);
	NetworkInterface.connectors(interface, connector);
	find connected( connector, otherConnector);
	connector != otherConnector;
	NetworkInterface.connectors(otherInterface, otherConnector);
	NetworkDevice.networkInterfaces(device, otherInterface);
	NetworkDevice.controls(device, subnetwork);
}

@QueryBasedFeature
pattern connection(connector: Connector, connection: Connection){
	Connection.from(connection, connector);
} or {
	Connection.to(connection, connector);
}
